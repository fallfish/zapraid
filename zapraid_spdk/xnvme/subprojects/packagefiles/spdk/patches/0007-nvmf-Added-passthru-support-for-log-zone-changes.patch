From 84e786a14f71b789e5c08c2e136f6859c66d7933 Mon Sep 17 00:00:00 2001
From: "Ivan L. Picoli" <i.picoli@samsung.com>
Date: Tue, 18 Aug 2020 17:31:37 +0200
Subject: [PATCH 7/8] nvmf: Added passthru support for log zone changes

Signed-off-by: Ivan L. Picoli <i.picoli@samsung.com>
---
 include/spdk/nvme_spec.h |  3 +++
 lib/nvmf/ctrlr.c         | 10 ++++++++++
 2 files changed, 13 insertions(+)

diff --git a/include/spdk/nvme_spec.h b/include/spdk/nvme_spec.h
index 94ef61403..c8d613200 100644
--- a/include/spdk/nvme_spec.h
+++ b/include/spdk/nvme_spec.h
@@ -2841,16 +2841,19 @@ enum spdk_nvme_log_page {
 	/** Reservation notification (optional) */
 	SPDK_NVME_LOG_RESERVATION_NOTIFICATION	= 0x80,
 
 	/** Sanitize status (optional) */
 	SPDK_NVME_LOG_SANITIZE_STATUS = 0x81,
 
 	/* 0x81-0xBF - I/O command set specific */
 
+	/** Zone Changes */
+	SPDK_NVME_LOG_ZONE_CHANGES = 0xBF,
+
 	/* 0xC0-0xFF - vendor specific */
 	SPDK_NVME_LOG_VENDOR_SPECIFIC_START	= 0xc0,
 	SPDK_NVME_LOG_VENDOR_SPECIFIC_END	= 0xff,
 };
 
 #define spdk_nvme_log_page_is_vendor_specific(lid) ((lid) >= SPDK_NVME_LOG_VENDOR_SPECIFIC_START)
 
 /**
diff --git a/lib/nvmf/ctrlr.c b/lib/nvmf/ctrlr.c
index 7ae3d502d..604cab61f 100644
--- a/lib/nvmf/ctrlr.c
+++ b/lib/nvmf/ctrlr.c
@@ -452,16 +452,17 @@ nvmf_ctrlr_create(struct spdk_nvmf_subsystem *subsystem,
 			goto err_listener;
 		}
 	}
 
 	req->qpair->ctrlr = ctrlr;
 	spdk_thread_send_msg(subsystem->thread, _nvmf_subsystem_add_ctrlr, req);
 
 	spdk_nvmf_set_passthru_admin_cmd(SPDK_NVME_OPC_IDENTIFY, 1);
+	spdk_nvmf_set_passthru_admin_cmd(SPDK_NVME_OPC_GET_LOG_PAGE, 1);
 
 	return ctrlr;
 err_listener:
 	spdk_bit_array_free(&ctrlr->qpair_mask);
 err_qpair_mask:
 	free(ctrlr);
 	return NULL;
 }
@@ -3163,16 +3164,25 @@ nvmf_ctrlr_process_admin_cmd(struct spdk_nvmf_request *req)
 			case SPDK_NVME_IDENTIFY_NS:
 				break;
 
 			default:
 				goto not_iocs_idfy;
 			}
 		}
 
+		if (cmd->opc == SPDK_NVME_OPC_GET_LOG_PAGE) {
+			switch (cmd->cdw10_bits.get_log_page.lid) {
+			case SPDK_NVME_LOG_ZONE_CHANGES:
+				break;
+			default:
+				goto not_iocs_idfy;
+			}
+		}
+
 		rc = g_nvmf_custom_admin_cmd_hdlrs[cmd->opc].hdlr(req);
 		if (rc >= SPDK_NVMF_REQUEST_EXEC_STATUS_COMPLETE) {
 			/* The handler took care of this commmand */
 			return rc;
 		}
 	}
 
 not_iocs_idfy:
-- 
2.30.2

